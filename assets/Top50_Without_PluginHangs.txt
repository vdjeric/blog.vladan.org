6255	PR_WaitCondVar (in nspr4.pdb)
 -> nsCycleCollectorRunner::Collect(bool,nsCycleCollectorResults *,nsICycleCollectorListener *) (in xul.pdb)
 -> nsCycleCollector_collect(bool,nsCycleCollectorResults *,nsICycleCollectorListener *) (in xul.pdb)
 -> nsJSContext::CycleCollectNow(nsICycleCollectorListener *,int,bool) (in xul.pdb)
 -> CCTimerFired (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)
 -> nsAppShell::Run() (in xul.pdb)
 -> nsAppStartup::Run() (in xul.pdb)

5177	GDIFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> GDIFontEntry::ReadCMAP() (in xul.pdb)
 -> gfxFontFamily::ReadAllCMAPs() (in xul.pdb)
 -> gfxPlatformFontList::RunLoader() (in xul.pdb)
 -> gfxFontInfoLoader::LoaderTimerFire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)
 -> nsAppShell::Run() (in xul.pdb)
 -> nsAppStartup::Run() (in xul.pdb)
 -> XREMain::XRE_mainRun() (in xul.pdb)

3953	NtGdiGetFontData (in wgdi32.pdb)
 -> gfxDWriteFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> gfxFontFamily::ReadFaceNames(gfxPlatformFontList *,bool) (in xul.pdb)
 -> gfxPlatformFontList::RunLoader() (in xul.pdb)
 -> gfxFontInfoLoader::LoaderTimerFire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)
 -> nsAppShell::Run() (in xul.pdb)
 -> nsAppStartup::Run() (in xul.pdb)
 -> XREMain::XRE_mainRun() (in xul.pdb)

3859	BeginMarkPhase (in mozjs.pdb)
 -> IncrementalCollectSlice (in mozjs.pdb)
 -> GCCycle (in mozjs.pdb)
 -> Collect (in mozjs.pdb)
 -> js::GCSlice(JSRuntime *,js::JSGCInvocationKind,JS::gcreason::Reason,__int64) (in mozjs.pdb)
 -> JS::IncrementalGC(JSRuntime *,JS::gcreason::Reason,__int64) (in mozjs.pdb)
 -> nsJSContext::GarbageCollectNow(JS::gcreason::Reason,nsJSContext::IsIncremental,nsJSContext::IsCompartment,nsJSContext::IsShrinking,__int64) (in xul.pdb)
 -> GCTimerFired(nsITimer *,void *) (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)

2154	FontFileAnalyzer::IsPfm(unsigned __int64) (in DWrite.pdb)
 -> FontFileAnalyzer::Analyze() (in DWrite.pdb)
 -> FontFileAnalyzer::FontFileAnalyzer(FontFileReference const &) (in DWrite.pdb)
 -> FontCollectionBuilder::FontCollectionBuilder(IDWriteFactory *,void const *,unsigned int,unsigned __int64,FontLoaderManagers const &,FontCollection const &,CountedPtr<AccessToken> const &) (in DWrite.pdb)
 -> FontCollectionElement::AddToCacheImpl(FontLoaderManagers const &,CacheWriter &,void const * *,unsigned int *) (in DWrite.pdb)
 -> CacheWriter::AddElement(FontLoaderManagers const &,IFontCacheElement &,unsigned int,unsigned int,void const * *,unsigned int *,bool *) (in DWrite.pdb)
 -> ClientSideCacheContext::ClientLookup(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)
 -> ClientSideCacheContext::InitializeElementImpl(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)
 -> FontCollectionElement::FontCollectionElement(void const *,unsigned int,unsigned __int64,ClientSideCacheContext *,DWriteFactory *,FontCollection const &) (in DWrite.pdb)
 -> DWriteFontCollection::DWriteFontCollection(void const *,unsigned int,unsigned __int64,ClientSideCacheContext *,DWriteFactory *,FontCollection const &) (in DWrite.pdb)
 -> ComObject<DWriteFontCollection>::ComObject<DWriteFontCollection><unsigned __int64 *,unsigned int,unsigned __int64,IntrusivePtr<ClientSideCacheContext>,DWriteFactory *,FontCollection>(unsigned __int64 *,unsigned int,unsigned __int64,IntrusivePtr<ClientSideCacheContext>,DWriteFactory *,FontCollection) (in DWrite.pdb)
 -> InnerComObject<DWriteFactory,DWriteFontCollection>::InnerComObject<DWriteFactory,DWriteFontCollection><unsigned __int64 *,unsigned int,unsigned __int64,IntrusivePtr<ClientSideCacheContext>,DWriteFactory *,FontCollection>(unsigned __int64 *,unsigned int,unsigned __int64,IntrusivePtr<ClientSideCacheContext>,DWriteFactory *,FontCollection) (in DWrite.pdb)
 -> DWriteFactory::GetSystemFontCollectionInternal(bool) (in DWrite.pdb)
 -> DWriteFactory::GetSystemFontCollection(IDWriteFontCollection * *,int) (in DWrite.pdb)
 -> gfxDWriteFontList::DelayedInitFontList() (in xul.pdb)

2137	js::GCMarker::processMarkStackTop(js::SliceBudget &) (in mozjs.pdb)
 -> js::GCMarker::drainMarkStack(js::SliceBudget &) (in mozjs.pdb)
 -> GCCycle (in mozjs.pdb)
 -> Collect (in mozjs.pdb)
 -> js::GCFinalSlice(JSRuntime *,js::JSGCInvocationKind,JS::gcreason::Reason) (in mozjs.pdb)
 -> FireForgetSkippable (in xul.pdb)
 -> CCTimerFired (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)

2103	JSScript::markChildren(JSTracer *) (in mozjs.pdb)
 -> MarkUnbarriered<JSScript> (in mozjs.pdb)
 -> fun_trace (in mozjs.pdb)
 -> js::GCMarker::processMarkStackTop(js::SliceBudget &) (in mozjs.pdb)
 -> js::GCMarker::drainMarkStack(js::SliceBudget &) (in mozjs.pdb)
 -> GCCycle (in mozjs.pdb)
 -> Collect (in mozjs.pdb)
 -> js::GCFinalSlice(JSRuntime *,js::JSGCInvocationKind,JS::gcreason::Reason) (in mozjs.pdb)
 -> FireForgetSkippable (in xul.pdb)
 -> CCTimerFired (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)

1985	BeginMarkPhase (in mozjs.pdb)
 -> IncrementalCollectSlice (in mozjs.pdb)
 -> GCCycle (in mozjs.pdb)
 -> Collect (in mozjs.pdb)
 -> js::GCSlice(JSRuntime *,js::JSGCInvocationKind,JS::gcreason::Reason,__int64) (in mozjs.pdb)
 -> js::MaybeGC(JSContext *) (in mozjs.pdb)
 -> nsJSContext::ScriptEvaluated(bool) (in xul.pdb)
 -> nsCxPusher::Pop() (in xul.pdb)
 -> nsJSContext::CallEventHandler(nsISupports *,JSObject *,JSObject *,nsIArray *,nsIVariant * *) (in xul.pdb)
 -> nsGlobalWindow::RunTimeoutHandler(nsTimeout *,nsIScriptContext *) (in xul.pdb)
 -> nsGlobalWindow::RunTimeout(nsTimeout *) (in xul.pdb)
 -> nsGlobalWindow::TimerCallback(nsITimer *,void *) (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)

1975	RtlpDeCommitFreeBlock (in wntdll.pdb)
 -> PR_Lock (in nspr4.pdb)
 -> nsCacheEntryDescriptor::nsOutputStreamWrapper::Release() (in xul.pdb)
 -> nsCOMPtr_base::assign_with_AddRef(nsISupports *) (in xul.pdb)
 -> nsStreamListenerTee::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsInputStreamPump::OnStateStop() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)

1856	NtGdiGetFontData (in wgdi32.pdb)
 -> GDIFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> GDIFontEntry::ReadCMAP() (in xul.pdb)
 -> gfxFontFamily::ReadAllCMAPs() (in xul.pdb)
 -> gfxPlatformFontList::RunLoader() (in xul.pdb)
 -> gfxFontInfoLoader::LoaderTimerFire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)
 -> nsAppShell::Run() (in xul.pdb)
 -> nsAppStartup::Run() (in xul.pdb)

1708	GDIFontEntry::ReadCMAP() (in xul.pdb)
 -> gfxFontFamily::ReadAllCMAPs() (in xul.pdb)
 -> gfxPlatformFontList::RunLoader() (in xul.pdb)
 -> gfxFontInfoLoader::LoaderTimerFire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)
 -> nsAppShell::Run() (in xul.pdb)
 -> nsAppStartup::Run() (in xul.pdb)
 -> XREMain::XRE_mainRun() (in xul.pdb)
 -> XREMain::XRE_main(int,char * * const,nsXREAppData const *) (in xul.pdb)

1688	gfxDWriteFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> gfxFontFamily::ReadFaceNames(gfxPlatformFontList *,bool) (in xul.pdb)
 -> gfxPlatformFontList::RunLoader() (in xul.pdb)
 -> gfxFontInfoLoader::LoaderTimerFire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)
 -> nsAppShell::Run() (in xul.pdb)
 -> nsAppStartup::Run() (in xul.pdb)
 -> XREMain::XRE_mainRun() (in xul.pdb)
 -> XREMain::XRE_main(int,char * * const,nsXREAppData const *) (in xul.pdb)

1600	RtlpDeCommitFreeBlock (in wntdll.pdb)
 -> PR_Lock (in nspr4.pdb)
 -> nsCacheService::Lock(mozilla::Telemetry::ID) (in xul.pdb)
 -> nsCacheEntryDescriptor::SetExpirationTime(unsigned int) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::UpdateExpirationTime() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::InitCacheEntry() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessNormal() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessResponse() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStartRequest(nsIRequest *,nsISupports *) (in xul.pdb)
 -> nsInputStreamPump::OnStateStart() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)

1437	NtGdiGetFontData (in wgdi32.pdb)
 -> gfxDWriteFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> gfxFontFamily::ReadFaceNames(gfxPlatformFontList *,bool) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameListsProc(nsAString_internal const &,nsRefPtr<gfxFontFamily> &,void *) (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsCOMPtr<mozIStorageStatement>,mozIStorageStatement *>::s_EnumStub(PLDHashTable *,PLDHashEntryHdr *,unsigned int,void *) (in xul.pdb)
 -> PL_DHashTableEnumerate (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry>,nsHttpConnectionMgr::nsConnectionEntry *>::Enumerate(PLDHashOperator (*)(nsACString_internal const &,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry> &,void *),void *) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameLists() (in xul.pdb)
 -> gfxDWriteFontList::LookupLocalFont(gfxProxyFontEntry const *,nsAString_internal const &) (in xul.pdb)
 -> gfxUserFontSet::LoadNext(gfxMixedFontFamily *,gfxProxyFontEntry *) (in xul.pdb)
 -> gfxUserFontSet::FindFontEntry(gfxFontFamily *,gfxFontStyle const &,bool &,bool &) (in xul.pdb)
 -> gfxFontGroup::ForEachFontInternal(nsAString_internal const &,nsIAtom *,bool,bool,bool,bool (*)(nsAString_internal const &,nsACString_internal const &,bool,void *),void *) (in xul.pdb)
 -> gfxFontGroup::BuildFontList() (in xul.pdb)
 -> gfxFontGroup::gfxFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)
 -> gfxWindowsPlatform::CreateFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)

1218	gfxGDIFontList::MakePlatformFont(gfxProxyFontEntry const *,unsigned char const *,unsigned int) (in xul.pdb)
 -> gfxUserFontSet::LoadFont(gfxMixedFontFamily *,gfxProxyFontEntry *,unsigned char const *,unsigned int &) (in xul.pdb)
 -> gfxUserFontSet::OnLoadComplete(gfxMixedFontFamily *,gfxProxyFontEntry *,unsigned char const *,unsigned int,tag_nsresult) (in xul.pdb)
 -> nsFontFaceLoader::OnStreamComplete(nsIStreamLoader *,nsISupports *,tag_nsresult,unsigned int,unsigned char const *) (in xul.pdb)
 -> nsStreamLoader::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsCORSListenerProxy::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsStreamListenerTee::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsInputStreamPump::OnStateStop() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)

1099	NtGdiAddFontMemResourceEx (in wgdi32.pdb)
 -> gfxGDIFontList::MakePlatformFont(gfxProxyFontEntry const *,unsigned char const *,unsigned int) (in xul.pdb)
 -> gfxUserFontSet::LoadFont(gfxMixedFontFamily *,gfxProxyFontEntry *,unsigned char const *,unsigned int &) (in xul.pdb)
 -> gfxUserFontSet::OnLoadComplete(gfxMixedFontFamily *,gfxProxyFontEntry *,unsigned char const *,unsigned int,tag_nsresult) (in xul.pdb)
 -> nsFontFaceLoader::OnStreamComplete(nsIStreamLoader *,nsISupports *,tag_nsresult,unsigned int,unsigned char const *) (in xul.pdb)
 -> nsStreamLoader::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsCORSListenerProxy::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsStreamListenerTee::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsInputStreamPump::OnStateStop() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)

1093	OpenTypeNameTable::OpenTypeNameTable(OpenTypeTables const &) (in DWrite.pdb)
 -> FontDifferentiator::FontDifferentiator(OpenTypeFace const &) (in DWrite.pdb)
 -> FontCollectionBuilder::Builder::AddFontInternal(unsigned __int64,FontFaceReference const &,IDWriteEudcEnumInfo::EudcFileState,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>,_STL70> const &) (in DWrite.pdb)
 -> FontCollectionBuilder::Builder::AddFont(unsigned __int64,FontFaceReference const &,IDWriteEudcEnumInfo::EudcFileState,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>,_STL70> const &) (in DWrite.pdb)
 -> FontCollectionBuilder::Builder::AddFile(IDWriteFontFile *,IDWriteEudcEnumInfo::EudcFileState,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>,_STL70> const &) (in DWrite.pdb)
 -> FontCollectionBuilder::FontCollectionBuilder(IDWriteFactory *,void const *,unsigned int,unsigned __int64,FontLoaderManagers const &,FontCollection const &,CountedPtr<AccessToken> const &) (in DWrite.pdb)
 -> FontCollectionElement::AddToCacheImpl(FontLoaderManagers const &,CacheWriter &,void const * *,unsigned int *) (in DWrite.pdb)
 -> CacheWriter::AddElement(FontLoaderManagers const &,IFontCacheElement &,unsigned int,unsigned int,void const * *,unsigned int *,bool *) (in DWrite.pdb)
 -> ClientSideCacheContext::ClientLookup(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)
 -> ClientSideCacheContext::InitializeElementImpl(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)
 -> FontCollectionElement::FontCollectionElement(void const *,unsigned int,unsigned __int64,ClientSideCacheContext *,DWriteFactory *,FontCollection const &) (in DWrite.pdb)
 -> DWriteFontCollection::DWriteFontCollection(void const *,unsigned int,unsigned __int64,ClientSideCacheContext *,DWriteFactory *,FontCollection const &) (in DWrite.pdb)
 -> ComObject<DWriteFontCollection>::ComObject<DWriteFontCollection><unsigned __int64 *,unsigned int,unsigned __int64,IntrusivePtr<ClientSideCacheContext>,DWriteFactory *,FontCollection>(unsigned __int64 *,unsigned int,unsigned __int64,IntrusivePtr<ClientSideCacheContext>,DWriteFactory *,FontCollection) (in DWrite.pdb)
 -> InnerComObject<DWriteFactory,DWriteFontCollection>::InnerComObject<DWriteFactory,DWriteFontCollection><unsigned __int64 *,unsigned int,unsigned __int64,IntrusivePtr<ClientSideCacheContext>,DWriteFactory *,FontCollection>(unsigned __int64 *,unsigned int,unsigned __int64,IntrusivePtr<ClientSideCacheContext>,DWriteFactory *,FontCollection) (in DWrite.pdb)
 -> DWriteFactory::GetSystemFontCollectionInternal(bool) (in DWrite.pdb)

991	js::StackIter::StackIter(JSContext *,js::StackIter::SavedOption) (in mozjs.pdb)
 -> js::ScriptFrameIter::ScriptFrameIter(JSContext *,js::StackIter::SavedOption) (in mozjs.pdb)
 -> IsTopFrameConstructing (in mozjs.pdb)
 -> js::ScriptDebugEpilogue(JSContext *,js::AbstractFramePtr,bool) (in mozjs.pdb)
 -> js::mjit::stubs::ScriptDebugEpilogue(js::VMFrame &) (in mozjs.pdb)

977	js::StackIter::StackIter(JSContext *,js::StackIter::SavedOption) (in mozjs.pdb)
 -> js::ScriptFrameIter::ScriptFrameIter(JSContext *,js::StackIter::SavedOption) (in mozjs.pdb)
 -> IsTopFrameConstructing (in mozjs.pdb)
 -> js::ScriptDebugPrologue(JSContext *,js::AbstractFramePtr) (in mozjs.pdb)
 -> js::mjit::stubs::ScriptDebugPrologue(js::VMFrame &) (in mozjs.pdb)

963	GDIFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> gfxFontFamily::ReadFaceNames(gfxPlatformFontList *,bool) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameListsProc(nsAString_internal const &,nsRefPtr<gfxFontFamily> &,void *) (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsCOMPtr<mozIStorageStatement>,mozIStorageStatement *>::s_EnumStub(PLDHashTable *,PLDHashEntryHdr *,unsigned int,void *) (in xul.pdb)
 -> PL_DHashTableEnumerate (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry>,nsHttpConnectionMgr::nsConnectionEntry *>::Enumerate(PLDHashOperator (*)(nsACString_internal const &,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry> &,void *),void *) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameLists() (in xul.pdb)
 -> gfxGDIFontList::LookupLocalFont(gfxProxyFontEntry const *,nsAString_internal const &) (in xul.pdb)
 -> gfxUserFontSet::LoadNext(gfxMixedFontFamily *,gfxProxyFontEntry *) (in xul.pdb)
 -> gfxUserFontSet::FindFontEntry(gfxFontFamily *,gfxFontStyle const &,bool &,bool &) (in xul.pdb)
 -> gfxFontGroup::ForEachFontInternal(nsAString_internal const &,nsIAtom *,bool,bool,bool,bool (*)(nsAString_internal const &,nsACString_internal const &,bool,void *),void *) (in xul.pdb)
 -> gfxFontGroup::BuildFontList() (in xul.pdb)
 -> gfxFontGroup::gfxFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)
 -> gfxWindowsPlatform::CreateFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)
 -> nsFontMetrics::Init(nsFont const &,nsIAtom *,nsDeviceContext *,gfxUserFontSet *) (in xul.pdb)

916	PR_Wait (in nspr4.pdb)
 -> nsDNSService::Resolve(nsACString_internal const &,unsigned int,nsIDNSRecord * *) (in xul.pdb)
 -> NS_InvokeByIndex_P (in xul.pdb)
 -> XPC_WN_CallMethod(JSContext *,unsigned int,JS::Value *) (in xul.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Interpret(JSContext *,js::StackFrame *,js::InterpMode) (in mozjs.pdb)
 -> js::RunScript(JSContext *,js::StackFrame *) (in mozjs.pdb)
 -> UncachedInlineCall (in mozjs.pdb)
 -> js::mjit::stubs::UncachedCallHelper(js::VMFrame &,unsigned int,bool,js::mjit::stubs::UncachedCallResult &) (in mozjs.pdb)
 -> js::mjit::CallCompiler::update() (in mozjs.pdb)
 -> js::mjit::ic::Call(js::VMFrame &,js::mjit::ic::CallICInfo *) (in mozjs.pdb)

913	js::GCMarker::processMarkStackTop(js::SliceBudget &) (in mozjs.pdb)
 -> js::GCMarker::drainMarkStack(js::SliceBudget &) (in mozjs.pdb)
 -> GCCycle (in mozjs.pdb)
 -> Collect (in mozjs.pdb)
 -> js::GCSlice(JSRuntime *,js::JSGCInvocationKind,JS::gcreason::Reason,__int64) (in mozjs.pdb)
 -> js_InvokeOperationCallback(JSContext *) (in mozjs.pdb)
 -> js::array_concat(JSContext *,unsigned int,JS::Value *) (in mozjs.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Interpret(JSContext *,js::StackFrame *,js::InterpMode) (in mozjs.pdb)
 -> js::RunScript(JSContext *,js::StackFrame *) (in mozjs.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct) (in mozjs.pdb)
 -> js_fun_apply(JSContext *,unsigned int,JS::Value *) (in mozjs.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Interpret(JSContext *,js::StackFrame *,js::InterpMode) (in mozjs.pdb)

850	CreateFileWImplementation (in kernel32.pdb)
 -> File::File(wchar_t const *,File::OpenMode,AccessToken const *) (in DWrite.pdb)
 -> LocalFileLoader::FileContext::FileContext(RefString,DateTime,AccessToken const *,std::pair<void const *,void const *> *) (in DWrite.pdb)
 -> ComObject<LocalFileLoader::FileContext>::ComObject<LocalFileLoader::FileContext><RefString,DateTime,AccessToken const *,std::pair<void const *,void const *> *>(RefString,DateTime,AccessToken const *,std::pair<void const *,void const *> *) (in DWrite.pdb)
 -> LocalFileLoader::FileContext::CreateFromKey(void const *,unsigned int,AccessToken const *,std::pair<void const *,void const *> *) (in DWrite.pdb)
 -> LocalFileLoader::CreateStreamFromKeyInternal(void const *,unsigned int,AccessToken const *,IDWriteFontFileStream * *,std::pair<void const *,void const *> *) (in DWrite.pdb)
 -> FontFileReference::OpenFileOnDemand() (in DWrite.pdb)
 -> FontFileReference::GetLastWriteTime() (in DWrite.pdb)
 -> FontCollectionBuilder::Builder::AddFile(IDWriteFontFile *,IDWriteEudcEnumInfo::EudcFileState,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>,_STL70> const &) (in DWrite.pdb)
 -> FontCollectionBuilder::FontCollectionBuilder(IDWriteFactory *,void const *,unsigned int,unsigned __int64,FontLoaderManagers const &,FontCollection const &,CountedPtr<AccessToken> const &) (in DWrite.pdb)
 -> FontCollectionElement::AddToCacheImpl(FontLoaderManagers const &,CacheWriter &,void const * *,unsigned int *) (in DWrite.pdb)
 -> CacheWriter::AddElement(FontLoaderManagers const &,IFontCacheElement &,unsigned int,unsigned int,void const * *,unsigned int *,bool *) (in DWrite.pdb)
 -> ClientSideCacheContext::ClientLookup(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)
 -> ClientSideCacheContext::InitializeElementImpl(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)
 -> FontCollectionElement::FontCollectionElement(void const *,unsigned int,unsigned __int64,ClientSideCacheContext *,DWriteFactory *,FontCollection const &) (in DWrite.pdb)

844	NtGdiGetFontData (in wgdi32.pdb)
 -> gfxDWriteFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> gfxFontFamily::ReadFaceNames(gfxPlatformFontList *,bool) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameListsProc(nsAString_internal const &,nsRefPtr<gfxFontFamily> &,void *) (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,mozJSComponentLoader::ModuleEntry *,mozJSComponentLoader::ModuleEntry *>::s_EnumStub(PLDHashTable *,PLDHashEntryHdr *,unsigned int,void *) (in xul.pdb)
 -> PL_DHashTableEnumerate (in xul.pdb)
 -> nsBaseHashtable<nsStringHashKey,nsRefPtr<gfxFontFamily>,gfxFontFamily *>::Enumerate(PLDHashOperator (*)(nsAString_internal const &,nsRefPtr<gfxFontFamily> &,void *),void *) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameLists() (in xul.pdb)
 -> gfxDWriteFontList::LookupLocalFont(gfxProxyFontEntry const *,nsAString_internal const &) (in xul.pdb)
 -> gfxUserFontSet::LoadNext(gfxMixedFontFamily *,gfxProxyFontEntry *) (in xul.pdb)
 -> gfxUserFontSet::FindFontEntry(gfxFontFamily *,gfxFontStyle const &,bool &,bool &) (in xul.pdb)
 -> gfxFontGroup::ForEachFontInternal(nsAString_internal const &,nsIAtom *,bool,bool,bool,bool (*)(nsAString_internal const &,nsACString_internal const &,bool,void *),void *) (in xul.pdb)
 -> gfxFontGroup::BuildFontList() (in xul.pdb)
 -> gfxFontGroup::gfxFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)
 -> gfxWindowsPlatform::CreateFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)

839	RtlpDeCommitFreeBlock (in wntdll.pdb)
 -> DWriteFactory::GetSharedFactory() (in DWrite.pdb)
 -> CreateFactory(DWRITE_FACTORY_TYPE,_GUID const &,IUnknown * *) (in DWrite.pdb)
 -> gfxWindowsPlatform::UpdateRenderMode() (in xul.pdb)
 -> gfxWindowsPlatform::gfxWindowsPlatform() (in xul.pdb)
 -> gfxPlatform::Init() (in xul.pdb)
 -> PresShell::GetReferenceRenderingContext() (in xul.pdb)
 -> PresShell::DoReflow(nsIFrame *,bool) (in xul.pdb)
 -> PresShell::ProcessReflowCommands(bool) (in xul.pdb)
 -> PresShell::FlushPendingNotifications(mozilla::ChangesToFlush) (in xul.pdb)
 -> nsRefreshDriver::Tick(__int64,mozilla::TimeStamp) (in xul.pdb)
 -> mozilla::RefreshDriverTimer::Tick() (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)

821	PR_Wait (in nspr4.pdb)
 -> nsDNSService::Resolve(nsACString_internal const &,unsigned int,nsIDNSRecord * *) (in xul.pdb)
 -> NS_InvokeByIndex_P (in xul.pdb)
 -> XPC_WN_CallMethod(JSContext *,unsigned int,JS::Value *) (in xul.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Interpret(JSContext *,js::StackFrame *,js::InterpMode) (in mozjs.pdb)
 -> js::RunScript(JSContext *,js::StackFrame *) (in mozjs.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *) (in mozjs.pdb)
 -> JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *) (in mozjs.pdb)
 -> nsXPCWrappedJSClass::CallMethod(nsXPCWrappedJS *,unsigned short,XPTMethodDescriptor const *,nsXPTCMiniVariant *) (in xul.pdb)
 -> nsXPCWrappedJS::CallMethod(unsigned short,XPTMethodDescriptor const *,nsXPTCMiniVariant *) (in xul.pdb)
 -> PrepareAndDispatch (in xul.pdb)
 -> SharedStub (in xul.pdb)
 -> nsEventListenerManager::HandleEventInternal(nsPresContext *,nsEvent *,nsIDOMEvent * *,nsIDOMEventTarget *,nsEventStatus *,nsCxPusher *) (in xul.pdb)

819	GDIFontEntry::ReadCMAP() (in xul.pdb)
 -> gfxFontEntry::HasCmapTable() (in xul.pdb)
 -> GDIFontEntry::SkipDuringSystemFallback() (in xul.pdb)
 -> gfxPlatformFontList::FindFontForCharProc(nsAString_internal const &,nsRefPtr<gfxFontFamily> &,void *) (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsCOMPtr<mozIStorageStatement>,mozIStorageStatement *>::s_EnumStub(PLDHashTable *,PLDHashEntryHdr *,unsigned int,void *) (in xul.pdb)
 -> PL_DHashTableEnumerate (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry>,nsHttpConnectionMgr::nsConnectionEntry *>::Enumerate(PLDHashOperator (*)(nsACString_internal const &,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry> &,void *),void *) (in xul.pdb)
 -> gfxPlatformFontList::GlobalFontFallback(unsigned int,int,gfxFontStyle const *,unsigned int &,gfxFontFamily * *) (in xul.pdb)
 -> gfxPlatformFontList::SystemFindFontForChar(unsigned int,int,gfxFontStyle const *) (in xul.pdb)
 -> gfxFontGroup::WhichSystemFontSupportsChar(unsigned int,int) (in xul.pdb)
 -> gfxFontGroup::FindFontForChar(unsigned int,unsigned int,int,gfxFont *,unsigned char *) (in xul.pdb)
 -> gfxFontGroup::ComputeRanges<wchar_t>(nsTArray<gfxTextRange> &,wchar_t const *,unsigned int,int) (in xul.pdb)
 -> gfxFontGroup::InitScriptRun<wchar_t>(gfxContext *,gfxTextRun *,wchar_t const *,unsigned int,unsigned int,int) (in xul.pdb)
 -> gfxFontGroup::InitTextRun<wchar_t>(gfxContext *,gfxTextRun *,wchar_t const *,unsigned int) (in xul.pdb)
 -> gfxFontGroup::MakeTextRun(wchar_t const *,unsigned int,gfxTextRunFactory::Parameters const *,unsigned int) (in xul.pdb)

789	RtlpDeCommitFreeBlock (in ntdll.pdb)
 -> PR_Lock (in nspr4.pdb)
 -> nsCacheService::Lock(mozilla::Telemetry::ID) (in xul.pdb)
 -> nsCacheEntryDescriptor::SetExpirationTime(unsigned int) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::UpdateExpirationTime() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::InitCacheEntry() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessNormal() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessResponse() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStartRequest(nsIRequest *,nsISupports *) (in xul.pdb)
 -> nsInputStreamPump::OnStateStart() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)

783	RtlpEnterCriticalSectionContended (in wntdll.pdb)
 -> RtlCreateUnicodeString (in wntdll.pdb)
 -> PR_Lock (in nspr4.pdb)
 -> nsCacheEntryDescriptor::nsOutputStreamWrapper::Release() (in xul.pdb)
 -> nsCOMPtr_base::assign_with_AddRef(nsISupports *) (in xul.pdb)
 -> nsStreamListenerTee::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsInputStreamPump::OnStateStop() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)

782	BeginMarkPhase (in mozjs.pdb)
 -> IncrementalCollectSlice (in mozjs.pdb)
 -> GCCycle (in mozjs.pdb)
 -> Collect (in mozjs.pdb)
 -> js::GCSlice(JSRuntime *,js::JSGCInvocationKind,JS::gcreason::Reason,__int64) (in mozjs.pdb)
 -> JS::IncrementalGC(JSRuntime *,JS::gcreason::Reason,__int64) (in mozjs.pdb)
 -> nsJSContext::GarbageCollectNow(JS::gcreason::Reason,nsJSContext::IsIncremental,nsJSContext::IsCompartment,nsJSContext::IsShrinking,__int64) (in xul.pdb)
 -> GCTimerFired(nsITimer *,void *) (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> nsXULWindow::ShowModal() (in xul.pdb)
 -> nsContentTreeOwner::ShowAsModal() (in xul.pdb)
 -> nsWindowWatcher::OpenWindowInternal(nsIDOMWindow *,char const *,char const *,char const *,bool,bool,bool,nsIArray *,nsIDOMWindow * *) (in xul.pdb)

774	RtlEnterCriticalSection (in ntdll.pdb)
 -> nsCacheService::Lock(mozilla::Telemetry::ID) (in xul.pdb)
 -> nsCacheEntryDescriptor::SetExpirationTime(unsigned int) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::UpdateExpirationTime() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::InitCacheEntry() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessNormal() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessResponse() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStartRequest(nsIRequest *,nsISupports *) (in xul.pdb)
 -> nsInputStreamPump::OnStateStart() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)

773	JSCompartment::sweep(js::FreeOp *,bool) (in mozjs.pdb)
 -> BeginSweepingZoneGroup (in mozjs.pdb)
 -> BeginSweepPhase (in mozjs.pdb)
 -> GCCycle (in mozjs.pdb)
 -> Collect (in mozjs.pdb)
 -> js::GCFinalSlice(JSRuntime *,js::JSGCInvocationKind,JS::gcreason::Reason) (in mozjs.pdb)
 -> FireForgetSkippable (in xul.pdb)
 -> CCTimerFired (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)

769	RtlpDeCommitFreeBlock (in wntdll.pdb)
 -> PR_Lock (in nspr4.pdb)
 -> nsCacheService::Lock(mozilla::Telemetry::ID) (in xul.pdb)
 -> nsCacheEntryDescriptor::nsOutputStreamWrapper::Release() (in xul.pdb)
 -> nsCOMPtr_base::assign_with_AddRef(nsISupports *) (in xul.pdb)
 -> nsStreamListenerTee::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsInputStreamPump::OnStateStop() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)

754	mozilla::dom::TraceProtoAndIfaceCache(JSTracer *,JSObject *) (in xul.pdb)
 -> XPC_WN_NoHelper_Trace (in xul.pdb)
 -> js::GCMarker::processMarkStackTop(js::SliceBudget &) (in mozjs.pdb)
 -> js::GCMarker::drainMarkStack(js::SliceBudget &) (in mozjs.pdb)
 -> GCCycle (in mozjs.pdb)
 -> Collect (in mozjs.pdb)
 -> js::GCFinalSlice(JSRuntime *,js::JSGCInvocationKind,JS::gcreason::Reason) (in mozjs.pdb)
 -> FireForgetSkippable (in xul.pdb)
 -> CCTimerFired (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)

750	RtlpEnterCriticalSectionContended (in wntdll.pdb)
 -> RtlCreateUnicodeString (in wntdll.pdb)
 -> PR_Lock (in nspr4.pdb)
 -> nsCacheService::Lock(mozilla::Telemetry::ID) (in xul.pdb)
 -> nsCacheEntryDescriptor::SetExpirationTime(unsigned int) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::UpdateExpirationTime() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::InitCacheEntry() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessNormal() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessResponse() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStartRequest(nsIRequest *,nsISupports *) (in xul.pdb)
 -> nsInputStreamPump::OnStateStart() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)

734	nsLocalFile::HasFileAttribute(unsigned long,bool *) (in xul.pdb)
 -> nsLocalFile::IsDirectory(bool *) (in xul.pdb)
 -> nsLocalFile::Remove(bool) (in xul.pdb)
 -> nsDiskCacheMap::DeleteStorage(nsDiskCacheRecord *,bool) (in xul.pdb)
 -> nsDiskCacheMap::DeleteStorage(nsDiskCacheRecord *) (in xul.pdb)
 -> nsDiskCacheEvictor::VisitRecord(nsDiskCacheRecord *) (in xul.pdb)
 -> nsDiskCacheMap::VisitEachRecord(unsigned int,nsDiskCacheRecordVisitor *,unsigned int) (in xul.pdb)
 -> nsDiskCacheMap::VisitRecords(nsDiskCacheRecordVisitor *) (in xul.pdb)
 -> nsDiskCacheDevice::EvictEntries(char const *) (in xul.pdb)
 -> nsCacheService::EvictEntriesForClient(char const *,int) (in xul.pdb)
 -> nsCacheService::EvictEntries(int) (in xul.pdb)
 -> NS_InvokeByIndex_P (in xul.pdb)
 -> XPC_WN_CallMethod(JSContext *,unsigned int,JS::Value *) (in xul.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Interpret(JSContext *,js::StackFrame *,js::InterpMode) (in mozjs.pdb)

717	EtwEventEnabled (in ntdll.pdb)
 -> PR_Lock (in nspr4.pdb)
 -> nsCacheService::Lock(mozilla::Telemetry::ID) (in xul.pdb)
 -> nsCacheEntryDescriptor::SetExpirationTime(unsigned int) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::UpdateExpirationTime() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::InitCacheEntry() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessNormal() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessResponse() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStartRequest(nsIRequest *,nsISupports *) (in xul.pdb)
 -> nsInputStreamPump::OnStateStart() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)

715	nsXPTCStubBase::QueryInterface(nsID const &,void * *) (in xul.pdb)
 -> nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &) (in xul.pdb)
 -> nsEventListenerManager::MarkForCC() (in xul.pdb)
 -> nsGlobalWindow::cycleCollection::CanSkipImpl(void *,bool) (in xul.pdb)
 -> ChildFinder::NoteXPCOMChild(nsISupports *) (in xul.pdb)
 -> nsDOMEvent::cycleCollection::TraverseImpl(nsDOMEvent::cycleCollection *,void *,nsCycleCollectionTraversalCallback &) (in xul.pdb)
 -> nsPurpleBuffer::RemoveSkippable(bool) (in xul.pdb)
 -> nsCycleCollector::ForgetSkippable(bool) (in xul.pdb)
 -> FireForgetSkippable (in xul.pdb)
 -> CCTimerFired (in xul.pdb)
 -> nsTimerImpl::Fire() (in xul.pdb)
 -> nsTimerEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)

688	RtlEnterCriticalSection (in ntdll.pdb)
 -> nsCacheEntryDescriptor::nsOutputStreamWrapper::Release() (in xul.pdb)
 -> nsCOMPtr_base::assign_with_AddRef(nsISupports *) (in xul.pdb)
 -> nsStreamListenerTee::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsInputStreamPump::OnStateStop() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)
 -> nsAppShell::Run() (in xul.pdb)

685	RtlpDeCommitFreeBlock (in wntdll.pdb)
 -> PR_Lock (in nspr4.pdb)
 -> nsCacheService::Lock(mozilla::Telemetry::ID) (in xul.pdb)
 -> nsCacheEntryDescriptor::SetStoragePolicy(int) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::InitCacheEntry() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessNormal() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::ProcessResponse() (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStartRequest(nsIRequest *,nsISupports *) (in xul.pdb)
 -> nsInputStreamPump::OnStateStart() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)

658	NtRequestWaitReplyPort (in wntdll.pdb)
 -> PROXYPORT::DocumentEvent(void *,void *,HDC__ *,int,unsigned long,void *,unsigned long,void *) (in wgdi32.pdb)
 -> DocumentEventEx (in wgdi32.pdb)
 -> StartDocW (in wgdi32.pdb)
 -> gfxWindowsSurface::BeginPrinting(nsAString_internal const &,nsAString_internal const &) (in xul.pdb)
 -> nsDeviceContext::BeginDocument(wchar_t *,wchar_t *,int,int) (in xul.pdb)
 -> nsPrintEngine::SetupToPrintContent() (in xul.pdb)
 -> nsPrintEngine::DocumentReadyForPrinting() (in xul.pdb)
 -> nsPrintEngine::AfterNetworkPrint(bool) (in xul.pdb)
 -> nsPrintEngine::InitPrintDocConstruction(bool) (in xul.pdb)
 -> nsPrintEngine::Observe(nsISupports *,char const *,wchar_t const *) (in xul.pdb)
 -> nsPrintProgress::DoneIniting() (in xul.pdb)
 -> NS_InvokeByIndex_P (in xul.pdb)
 -> XPC_WN_CallMethod(JSContext *,unsigned int,JS::Value *) (in xul.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)

649	NtGdiGetFontData (in wgdi32.pdb)
 -> GDIFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> gfxFontFamily::ReadFaceNames(gfxPlatformFontList *,bool) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameListsProc(nsAString_internal const &,nsRefPtr<gfxFontFamily> &,void *) (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsCOMPtr<mozIStorageStatement>,mozIStorageStatement *>::s_EnumStub(PLDHashTable *,PLDHashEntryHdr *,unsigned int,void *) (in xul.pdb)
 -> PL_DHashTableEnumerate (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry>,nsHttpConnectionMgr::nsConnectionEntry *>::Enumerate(PLDHashOperator (*)(nsACString_internal const &,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry> &,void *),void *) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameLists() (in xul.pdb)
 -> gfxGDIFontList::LookupLocalFont(gfxProxyFontEntry const *,nsAString_internal const &) (in xul.pdb)
 -> gfxUserFontSet::LoadNext(gfxMixedFontFamily *,gfxProxyFontEntry *) (in xul.pdb)
 -> gfxUserFontSet::FindFontEntry(gfxFontFamily *,gfxFontStyle const &,bool &,bool &) (in xul.pdb)
 -> gfxFontGroup::ForEachFontInternal(nsAString_internal const &,nsIAtom *,bool,bool,bool,bool (*)(nsAString_internal const &,nsACString_internal const &,bool,void *),void *) (in xul.pdb)
 -> gfxFontGroup::BuildFontList() (in xul.pdb)
 -> gfxFontGroup::gfxFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)
 -> gfxWindowsPlatform::CreateFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)

616	js::Interpret(JSContext *,js::StackFrame *,js::InterpMode) (in mozjs.pdb)
 -> js::RunScript(JSContext *,js::StackFrame *) (in mozjs.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *) (in mozjs.pdb)
 -> JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *) (in mozjs.pdb)
 -> nsXPCWrappedJSClass::CallMethod(nsXPCWrappedJS *,unsigned short,XPTMethodDescriptor const *,nsXPTCMiniVariant *) (in xul.pdb)
 -> nsXPCWrappedJS::CallMethod(unsigned short,XPTMethodDescriptor const *,nsXPTCMiniVariant *) (in xul.pdb)
 -> PrepareAndDispatch (in xul.pdb)
 -> SharedStub (in xul.pdb)
 -> nsContentPolicy::CheckPolicy(tag_nsresult ( nsIContentPolicy::*)(unsigned int,nsIURI *,nsIURI *,nsISupports *,nsACString_internal const &,nsISupports *,nsIPrincipal *,short *),unsigned int,nsIURI *,nsIURI *,nsISupports *,nsACString_internal const &,nsISupports *,nsIPrincipal *,short *) (in xul.pdb)
 -> nsContentPolicy::ShouldLoad(unsigned int,nsIURI *,nsIURI *,nsISupports *,nsACString_internal const &,nsISupports *,nsIPrincipal *,short *) (in xul.pdb)
 -> NS_CheckContentLoadPolicy(unsigned int,nsIURI *,nsIPrincipal *,nsISupports *,nsACString_internal const &,nsISupports *,short *,nsIContentPolicy *,nsIScriptSecurityManager *) (in xul.pdb)
 -> nsContentUtils::CanLoadImage(nsIURI *,nsISupports *,nsIDocument *,nsIPrincipal *,short *) (in xul.pdb)
 -> nsImageLoadingContent::LoadImage(nsIURI *,bool,bool,nsIDocument *,unsigned int) (in xul.pdb)
 -> nsImageLoadingContent::LoadImage(nsAString_internal const &,bool,bool) (in xul.pdb)

611	PR_WaitCondVar (in nspr4.pdb)
 -> mozilla::CondVar::Wait(unsigned int) (in xul.pdb)
 -> mozilla::dom::workers::WorkerPrivate::BlockAndCollectRuntimeStats(bool,void *) (in xul.pdb)
 -> mozilla::dom::workers::WorkerPrivate::MemoryReporter::GetExplicitNonHeap(__int64 *) (in xul.pdb)
 -> nsMemoryReporterManager::GetExplicit(__int64 *) (in xul.pdb)
 -> ExplicitReporter::GetAmount(__int64 *) (in xul.pdb)
 -> NS_InvokeByIndex_P (in xul.pdb)
 -> XPC_WN_GetterSetter(JSContext *,unsigned int,JS::Value *) (in xul.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *) (in mozjs.pdb)
 -> js::GetPropertyOperation(JSContext *,JSScript *,unsigned char *,JS::MutableHandle<JS::Value>,JS::MutableHandle<JS::Value>) (in mozjs.pdb)
 -> js::Interpret(JSContext *,js::StackFrame *,js::InterpMode) (in mozjs.pdb)
 -> js::RunScript(JSContext *,js::StackFrame *) (in mozjs.pdb)
 -> js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct) (in mozjs.pdb)
 -> js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *) (in mozjs.pdb)

607	gfxDWriteFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> gfxFontFamily::ReadFaceNames(gfxPlatformFontList *,bool) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameListsProc(nsAString_internal const &,nsRefPtr<gfxFontFamily> &,void *) (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsCOMPtr<mozIStorageStatement>,mozIStorageStatement *>::s_EnumStub(PLDHashTable *,PLDHashEntryHdr *,unsigned int,void *) (in xul.pdb)
 -> PL_DHashTableEnumerate (in xul.pdb)
 -> nsBaseHashtable<nsCStringHashKey,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry>,nsHttpConnectionMgr::nsConnectionEntry *>::Enumerate(PLDHashOperator (*)(nsACString_internal const &,nsAutoPtr<nsHttpConnectionMgr::nsConnectionEntry> &,void *),void *) (in xul.pdb)
 -> gfxPlatformFontList::InitFaceNameLists() (in xul.pdb)
 -> gfxDWriteFontList::LookupLocalFont(gfxProxyFontEntry const *,nsAString_internal const &) (in xul.pdb)
 -> gfxUserFontSet::LoadNext(gfxMixedFontFamily *,gfxProxyFontEntry *) (in xul.pdb)
 -> gfxUserFontSet::FindFontEntry(gfxFontFamily *,gfxFontStyle const &,bool &,bool &) (in xul.pdb)
 -> gfxFontGroup::ForEachFontInternal(nsAString_internal const &,nsIAtom *,bool,bool,bool,bool (*)(nsAString_internal const &,nsACString_internal const &,bool,void *),void *) (in xul.pdb)
 -> gfxFontGroup::BuildFontList() (in xul.pdb)
 -> gfxFontGroup::gfxFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)
 -> gfxWindowsPlatform::CreateFontGroup(nsAString_internal const &,gfxFontStyle const *,gfxUserFontSet *) (in xul.pdb)
 -> nsFontMetrics::Init(nsFont const &,nsIAtom *,nsDeviceContext *,gfxUserFontSet *) (in xul.pdb)

593	`anonymous namespace'::TrueTypeFontMetricsBuilder::GetBlackBox(unsigned short) (in DWrite.pdb)
 -> `anonymous namespace'::TrueTypeFontMetricsBuilder::GetGlyphMetrics(unsigned short) (in DWrite.pdb)
 -> FontFaceRegionBuilder::Impl::WriteRegionInternal(MemoryWriter<PhysicalFontFaceRegion> &) (in DWrite.pdb)
 -> FontFaceRegionBuilder::Impl::WriteRegion(MemoryWriter<PhysicalFontFaceRegion> &) (in DWrite.pdb)
 -> FontFaceElement::AddToCacheImpl(FontLoaderManagers const &,CacheWriter &,void const * *,unsigned int *) (in DWrite.pdb)
 -> CacheWriter::AddElement(FontLoaderManagers const &,IFontCacheElement &,unsigned int,unsigned int,void const * *,unsigned int *,bool *) (in DWrite.pdb)
 -> ClientSideCacheContext::ClientLookup(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)
 -> ClientSideCacheContext::InitializeElementImpl(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)
 -> DWriteFontFace::DWriteFontFace(ClientSideCacheContext *,DWRITE_FONT_FACE_TYPE,DWRITE_FONT_SIMULATIONS,unsigned int,IDWriteFontFile * const *,unsigned int) (in DWrite.pdb)
 -> DWriteFontFace::CreateFromKey(ClientSideCacheContext &,DWRITE_FONT_FACE_TYPE,DWRITE_FONT_SIMULATIONS,void const *,unsigned int,CountedPtr<AccessToken> const &,FontFaceCache *) (in DWrite.pdb)
 -> DWriteFont::CreateFontFace(IDWriteFontFace * *) (in DWrite.pdb)
 -> gfxDWriteFontEntry::CreateFontFace(IDWriteFontFace * *,DWRITE_FONT_SIMULATIONS) (in xul.pdb)
 -> gfxDWriteFont::gfxDWriteFont(gfxFontEntry *,gfxFontStyle const *,bool,gfxFont::AntialiasOption) (in xul.pdb)
 -> gfxDWriteFontEntry::CreateFontInstance(gfxFontStyle const *,bool) (in xul.pdb)
 -> gfxFontEntry::FindOrMakeFont(gfxFontStyle const *,bool) (in xul.pdb)

586	ZwCreateFile (in wntdll.pdb)
 -> CreateFileWImplementation (in wkernel32.pdb)
 -> File::File(wchar_t const *,File::OpenMode,AccessToken const *) (in DWrite.pdb)
 -> LocalFileLoader::FileContext::FileContext(RefString,DateTime,AccessToken const *,std::pair<void const *,void const *> *) (in DWrite.pdb)
 -> ComObject<LocalFileLoader::FileContext>::ComObject<LocalFileLoader::FileContext><RefString,DateTime,AccessToken const *,std::pair<void const *,void const *> *>(RefString,DateTime,AccessToken const *,std::pair<void const *,void const *> *) (in DWrite.pdb)
 -> LocalFileLoader::FileContext::CreateFromKey(void const *,unsigned int,AccessToken const *,std::pair<void const *,void const *> *) (in DWrite.pdb)
 -> LocalFileLoader::CreateStreamFromKeyInternal(void const *,unsigned int,AccessToken const *,IDWriteFontFileStream * *,std::pair<void const *,void const *> *) (in DWrite.pdb)
 -> FontFileReference::OpenFileOnDemand() (in DWrite.pdb)
 -> FontFileReference::GetLastWriteTime() (in DWrite.pdb)
 -> FontCollectionBuilder::Builder::AddFile(IDWriteFontFile *,IDWriteEudcEnumInfo::EudcFileState,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>,_STL70> const &) (in DWrite.pdb)
 -> FontCollectionBuilder::FontCollectionBuilder(IDWriteFactory *,void const *,unsigned int,unsigned __int64,FontLoaderManagers const &,FontCollection const &,CountedPtr<AccessToken> const &) (in DWrite.pdb)
 -> FontCollectionElement::AddToCacheImpl(FontLoaderManagers const &,CacheWriter &,void const * *,unsigned int *) (in DWrite.pdb)
 -> CacheWriter::AddElement(FontLoaderManagers const &,IFontCacheElement &,unsigned int,unsigned int,void const * *,unsigned int *,bool *) (in DWrite.pdb)
 -> ClientSideCacheContext::ClientLookup(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)
 -> ClientSideCacheContext::InitializeElementImpl(IFontCacheElement &,unsigned int,unsigned int) (in DWrite.pdb)

575	EtwEventEnabled (in ntdll.pdb)
 -> PR_Lock (in nspr4.pdb)
 -> nsCacheEntryDescriptor::nsOutputStreamWrapper::Release() (in xul.pdb)
 -> nsCOMPtr_base::assign_with_AddRef(nsISupports *) (in xul.pdb)
 -> nsStreamListenerTee::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> mozilla::net::nsHttpChannel::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult) (in xul.pdb)
 -> nsInputStreamPump::OnStateStop() (in xul.pdb)
 -> nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *) (in xul.pdb)
 -> nsInputStreamReadyEvent::Run() (in xul.pdb)
 -> nsThread::ProcessNextEvent(bool,bool *) (in xul.pdb)
 -> NS_ProcessNextEvent_P(nsIThread *,bool) (in xul.pdb)
 -> mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *) (in xul.pdb)
 -> MessageLoop::RunHandler() (in xul.pdb)
 -> MessageLoop::Run() (in xul.pdb)
 -> nsBaseAppShell::Run() (in xul.pdb)

569	nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)
 -> nsIFrame::InvalidateFrameSubtree(unsigned int) (in xul.pdb)

559	GDIFontEntry::GetFontTable(unsigned int,FallibleTArray<unsigned char> &) (in xul.pdb)
 -> GDIFontEntry::ReadCMAP() (in xul.pdb)
 -> GDIFontEntry::TestCharacterMap(unsigned int) (in xul.pdb)
 -> gfxFontGroup::WhichPrefFontSupportsChar(unsigned int) (in xul.pdb)
 -> gfxFontGroup::FindFontForChar(unsigned int,unsigned int,int,gfxFont *,unsigned char *) (in xul.pdb)
 -> gfxFontGroup::ComputeRanges<wchar_t>(nsTArray<gfxTextRange> &,wchar_t const *,unsigned int,int) (in xul.pdb)
 -> gfxFontGroup::InitScriptRun<wchar_t>(gfxContext *,gfxTextRun *,wchar_t const *,unsigned int,unsigned int,int) (in xul.pdb)
 -> gfxFontGroup::InitTextRun<wchar_t>(gfxContext *,gfxTextRun *,wchar_t const *,unsigned int) (in xul.pdb)
 -> gfxFontGroup::MakeTextRun(wchar_t const *,unsigned int,gfxTextRunFactory::Parameters const *,unsigned int) (in xul.pdb)
 -> MakeTextRun<wchar_t>(wchar_t const *,unsigned int,gfxFontGroup *,gfxTextRunFactory::Parameters const *,unsigned int) (in xul.pdb)
 -> BuildTextRunsScanner::BuildTextRunForFrames(void *) (in xul.pdb)
 -> BuildTextRunsScanner::FlushFrames(bool,bool) (in xul.pdb)
 -> BuildTextRuns (in xul.pdb)
 -> nsTextFrame::EnsureTextRun(nsTextFrame::TextRunType,gfxContext *,nsIFrame *,nsLineList_iterator const *,unsigned int *) (in xul.pdb)
 -> nsTextFrame::AddInlineMinWidthForFlow(nsRenderingContext *,nsIFrame::InlineMinWidthData *,nsTextFrame::TextRunType) (in xul.pdb)

